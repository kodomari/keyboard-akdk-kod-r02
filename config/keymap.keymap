/*
 * kod_01 キーマップ
 * HHKB風60%配列 + 6列目マウス機能
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    keymap {
        compatible = "zmk,keymap";
        
        // デフォルトレイヤー (0層)
        default_layer {
            bindings = <
                // 1行目: ESC, 1-0, Backspace, | (パイプ), Delete
                &kp ESC    &kp N1   &kp N2   &kp N3   &kp N4   &kp N5   &kp N6   &kp N7   &kp N8   &kp N9   &kp N0   &kp MINUS &kp EQUAL &kp BSPC  &kp DEL
                
                // 2行目: Tab, QWERTY, [ ] \
                &kp TAB    &kp Q    &kp W    &kp E    &kp R    &kp T    &kp Y    &kp U    &kp I    &kp O    &kp P    &kp LBKT  &kp RBKT  &kp BSLH
                
                // 3行目: Ctrl, ASDF..., ; ' Enter
                &kp LCTRL  &kp A    &kp S    &kp D    &kp F    &kp G    &kp H    &kp J    &kp K    &kp L    &kp SEMI &kp SQT   &kp RET   &mmv MOVE_UP
                
                // 4行目: Shift, ZXCV..., Shift
                &kp LSHFT  &kp Z    &kp X    &kp C    &kp V    &kp B    &kp N    &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT &kp UP    &kp PG_DN
                
                // 5行目: スペースバー周り + カーソル移動左下右
                &mo 1      &kp LGUI &kp LALT &kp SPACE &kp SPACE &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &kp LEFT  &kp DOWN  &kp RIGHT
                
                // 6行目: マウス機能 (左・中・右クリック) + その他
                &mkp LCLK  &mkp MCLK &mkp RCLK &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE
            >;
        };
        
        // レイヤー1 (Fn層): チルダ + F1-F12
        fn_layer {
            bindings = <
                // 1行目: ~, F1-F12, Delete
                &kp GRAVE  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &kp F11   &kp F12   &kp DEL   &kp DEL
                
                // 2行目以降: 透過設定（元のキーが動作）
                &trans     &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans    &trans    &trans
                &trans     &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans    &trans    &trans
                &trans     &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans    &trans    &trans
                &trans     &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans
                &trans     &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans    &trans    &trans    &trans
            >;
        };
    };
};
